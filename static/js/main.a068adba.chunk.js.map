{"version":3,"sources":["welcome/Welcome.js","info-panel/InfoPanel.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","useState","visible","setVisible","useEffect","setTimeout","className","src","alt","xmlns","viewBox","width","height","fill","fill-rule","stroke","stroke-width","x","y","rx","stroke-linecap","d","href","target","rel","style","position","overflow","color","fontSize","top","title","frameBorder","allowFullScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a068adba.chunk.js","sourcesContent":["import React from 'react';\nimport './Welcome.scss';\n\nfunction Welcome() {\n    const [visible, setVisible] = React.useState(false);\n    React.useEffect(() => {\n        setTimeout(() => {\n            setVisible(true);\n        })\n    }, []);\n    return (\n        <div className=\"wd-welcome__wrapper-max\">\n            <div className={\"wd-welcome__wrapper \" + (visible ? '_show' : '_hidden')}>\n                <img className=\"wd-welcome__peo1\" src={'/images/peo1.png'} alt={\"\"}/>\n                <div className=\"wd-welcome\">\n                    <div className=\"wd-welcome__inner\">\n                        {/*<div className=\"wd-welcome__photo\">*/}\n\n                        {/*</div>*/}\n                        <div className=\"wd-welcome__texts\">\n                            <div className=\"wd-welcome__dear\">\n                                ДОРОГИЕ ДРУЗЬЯ\n                            </div>\n                            <div className=\"wd-welcome__text\">\n                                Приглашаем вас на торжество,\n                                <br/>\n                                посвящённое нашему бракосочетанию!\n                                <br/>\n                                Ждём вас <span className=\"wd-welcome__text _bold\"> 27 июня 2021 </span> к <span\n                                className=\"wd-welcome__text _bold\"> 14:00 </span>\n                                <br/>\n                                в кафе «Среда» на Крылатских холмах.\n                            </div>\n\n                            <div className=\"wd-welcome__names\">\n                                ФЁДОР и ЛЕРА\n                            </div>\n                        </div>\n                        <img className=\"wd-welcome__peo2\" src={'/images/peo2.png'} alt={\"\"}/>\n                    </div>\n                </div>\n                <div className=\"wd-welcome__scroll\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 27\" width=\"12px\" height=\"18px\">\n                    <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#cbc6a0\" stroke-width=\"2\">\n                      <rect width=\"16\" height=\"25\" x=\"1\" y=\"1\" rx=\"8\"></rect>\n                      <path stroke-linecap=\"square\" d=\"M9 12.15V8.1\"></path>\n                    </g>\n                  </svg>\n                  Скролльте вниз\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(Welcome);\n","import React from 'react';\nimport './InfoPanel.scss';\n\nfunction InfoPanel() {\n    return (\n        <div className=\"wd-info-panel\">\n            <div className=\"wd-info-panel__inner\">\n                <div className=\"wd-info-panel__block\">\n                    <div className=\"wd-info-panel__block-title\">\n                        DRESS CODE\n                    </div>\n                    <div className=\"wd-info-panel__block-text\">\n                        Приходите так, как вам будет удобно.\n                    </div>\n                </div>\n\n                <div className=\"wd-info-panel__block\">\n                    <div className=\"wd-info-panel__block-title\">\n                        SAVE THE DATE\n                    </div>\n                    <div className=\"wd-info-panel__block-text\">\n                        Добавьте событие себе в календарь, чтобы не забыть дату и время:\n                        <br/>\n                        <a href={\"/files/wedding.ics\"} target={\"_blank\"}\n                           rel={\"noopener noreferrer\"}>Скачать событие календаря Apple</a>\n                        <br/>\n                        <a href={\"http://www.google.com/calendar/event?action=TEMPLATE&dates=20210627T110000Z%2F20210627T200000Z&text=%D0%A1%D0%B2%D0%B0%D0%B4%D1%8C%D0%B1%D0%B0%20%D0%9B%D0%B5%D1%80%D1%8B%20%D0%B8%20%D0%A4%D1%91%D0%B4%D0%BE%D1%80%D0%B0&location=%D0%9A%D0%B0%D1%84%D0%B5%20%D0%A1%D1%80%D0%B5%D0%B4%D0%B0%2C%20%D0%9A%D1%80%D1%8B%D0%BB%D0%B0%D1%82%D1%81%D0%BA%D0%B8%D0%B5%20%D1%85%D0%BE%D0%BB%D0%BC%D1%8B%201&details=\"} target={\"_blank\"}\n                           rel={\"noopener noreferrer\"}>Создать событие календаря Google</a>\n                    </div>\n                </div>\n\n                <div className=\"wd-info-panel__block\">\n                    <div className=\"wd-info-panel__block-title\">\n                        КАК ДОБРАТЬСЯ\n                    </div>\n                    <div className=\"wd-info-panel__block-text _left-right\">\n                        <div className=\"wd-info-panel__block-text-left\">\n                            Точный адрес г.Москва ул.Крылатская 1.\n                            <br/>\n                            <a href={\"https://yandex.ru/maps/-/CCQ~RMGRgD\"} target={\"_blank\"}\n                               rel={\"noopener noreferrer\"}>Яндекс.Карты</a>\n                            <br/>\n                            <a href={\"https://goo.gl/maps/tri7mYxZxZNzMiVVA\"} target={\"_blank\"}\n                               rel={\"noopener noreferrer\"}>Google.Карты</a>\n                            <br/>\n                            <br/>\n                            Вход в парк со стороны ул. Крылатские Холмы в районе дома 7/2.\n                            <br/>\n                            Карта как пройти от такси до кафе «Среда» <a href={\"/images/map.png\"} target={\"_blank\"}\n                                                                         rel={\"noopener noreferrer\"}>здесь</a>.\n                            <br/>\n                            <br/>\n                            <a href={\"/images/mapSreda.jpg\"} target={\"_blank\"}\n                               rel={\"noopener noreferrer\"}>Инструкция</a> как добраться на метро, автобусе или личном\n                            авто.\n                            <br/>\n                            <br/>\n                            Кафе находится на холме, чтобы дойти до него, вам надо будет подняться примерно 100м по\n                            деревянному настилу.\n                            Если вы планируете придти на каблуках, учитывайте это, возможно вы захотите взять сменку.\n                        </div>\n                        <div className=\"wd-info-panel__block-text-right\">\n                            <div style={{position: \"relative\", overflow: \"hidden\", width: \"100%\", height: \"100%\"}}><a\n                                href=\"https://yandex.ru/maps/org/sreda/1149408352/?utm_medium=mapframe&utm_source=maps\"\n                                style={{color: \"#eee\", fontSize: \"12px\", position: \"absolute\", top: \"0px\"}}>Москва</a><a\n                                href=\"https://yandex.ru/maps/213/moscow/category/banquet_hall/?utm_medium=mapframe&utm_source=maps\"\n                                style={{color: \"#eee\", fontSize: \"12px\", position: \"absolute\", top: \"14px\"}}>Яндекс.Карты</a>\n                                <iframe src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Ad2c8bf9f2a68d0027962a8a5757ad3cb3b9128f17f6cd4b95dfdfcd405a7c104&amp;source=constructor\" width=\"100%\" height=\"100%\"\n                                        title={\"Yandex Map\"}\n                                        frameBorder=\"1\" allowFullScreen={true} style={{position: \"relative\"}}></iframe>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default React.memo(InfoPanel);\n","import React from 'react';\nimport './App.scss';\nimport Welcome from \"./welcome/Welcome\";\nimport InfoPanel from \"./info-panel/InfoPanel\";\n\nfunction App() {\n  return (\n    <div className=\"wd-app\">\n        <Welcome>\n        </Welcome>\n        <InfoPanel>\n        </InfoPanel>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}